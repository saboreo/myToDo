services:
  db:
    image: mysql:8.0
    container_name: mytodo-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: mytodo
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_USER: mytodo
      MYSQL_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - mytodo-network
    healthcheck:
      test: mysqladmin ping -h localhost -u root -p$$MYSQL_ROOT_PASSWORD
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: mytodo-app
    container_name: mytodo-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/php.ini:/usr/local/etc/php/php.ini
    networks:
      - mytodo-network
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c '
        php artisan migrate &&
        php artisan optimize:clear &&
        npm run build &&
        php-fpm
      '

  webserver:
    image: nginx:alpine
    container_name: mytodo-webserver
    restart: unless-stopped
    depends_on:
      app:
        condition: service_started
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mytodo-network

networks:
  mytodo-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
